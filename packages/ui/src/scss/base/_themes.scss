@import '../abstracts/variables';

$themes: (
  default: (
    //logo: url('../images/brand/logo_vertical.svg'),
    bg: $bg--light,
    bg-avatar: $bg--avatar--light,
    text: $text--light,
    text-secondary: $text--2--light,
    text-avatar: $text--avatar--light,
    link: $brand--blue--light,
    hover: $hover--light,
    border: $border--light,
    //Theme colors
    primary: $primary,
    secondary: $secondary,
    success: $success,
    info: $info,
    danger: $danger,
    light: $light,
    dark: $dark,
  ),
  dark: (
    //logo: url('../images/brand/logo_vertical--invert.svg'),
    bg: $bg-dark,
    bg-avatar: $bg--avatar--dark,
    text: $text--dark,
    text-secondary: $text--2--dark,
    text-avatar: $text--avatar--dark,
    link: $brand--blue--dark,
    hover: $hover--dark,
    border: $border--dark,
    //Theme colors
    primary: $primary,
    secondary: $secondary,
    success: $success,
    info: $info,
    danger: $danger,
    light: $light,
    dark: $dark,
  ),
);

//Transition used for theme switching
.transition,
.transition *,
.transition *:before,
.transition *:after {
  transition: cubic-bezier(0.68, -0.55, 0.27, 01.55) 620ms !important;
  transition-delay: 0 !important;
}

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
